
File Structure:
capstone
    armulator -- ARM Python Testbench
    base -- Base directory for ARM CPU
        src -- Source files
            assembler -- Assembly Test Generation
            rtl -- RTL Verilog for Pipelined CPU
            rtl_np -- RTL Verilog for Non-pipelined CPU (Unsupported, for archive)
            syn -- Synthesis source files with power-gating
            syn_npg -- Synthesis source files without power-gating
            apr -- APR source files with power-gating
            apr_npg -- APR source files without power-gating
        sim -- VCS simulation directories
            pre-syn -- Pre-Synthesis simulation run directory
            post-syn -- Post-Synthesis simulation run directory with power-gating
            post-syn_npg -- Post-Synthesis simulation run directory without power-gating
            post-apr -- Post-APR simulation run directory with power-gating
            post-apr_npg -- Post-APR simulation run directory without power-gating
        syn -- Synthesis run directory with power-gating
        syn_npg -- Synthesis run directory without power-gating
        apr -- APR run directory with power-gating
        apr_npg -- APR run directory without power-gating
        ptpx -- PrimeTime PX directory with power-gating
        ptpx_npg -- PrimeTime PX directory without power-gating

How to run Synthesis:
1. Go to syn run directory
2. Run "make"

How to run APR:
0. Prerequisite: Must have run Synthesis first
1. Go to APR run directory
2. Run "make"

How to run VCS (simulations):
0. Prerequisite: Must have run Synthesis/APR first for those simulations
1. Go to simulation directory
2. Run "make"
3. To run a specific supported test, add "TEST=$USER_TEST" (e.g. "make TEST=FIBONACCI")

How to run PTPX:
0. Prerequisite: Must have run Synthesis, APR, and post-APR simulation first
1. Go to PTPX run directory
2. Run "make"

How to run the ARM testbench:
0. Prerequisite: Must have run Synthesis/APR first to generate netlist for those tests
1. Go to the armulator directory
2. For help, run "python3 arm_testbench.py --help"
3. Example of running the Fibonacci test on post-APR: "python3 arm_testbench.py -s apr -t fibonacci"

ARM testbench limitations (due to ARM compliancy from armulator):
1. Last instruction must be MOVS R7, #7
2. Instruction address starts at 0x0
3. Data memory address must start at 0x100 and end at 0x1FF
4. Instruction accesses must be aligned (every 4)
